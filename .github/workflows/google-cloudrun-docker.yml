name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: petclinic-420517
  GAR_LOCATION: europe-west2
  SERVICE: spring-petclinic
  REGION: europe-west2
  IMAGE_NAME: website

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud and Docker
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup Java and Maven Caching
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
        run: |
          echo "Caching Maven and SonarCloud packages"
          mkdir -p ~/.m2 ~/.sonar/cache
          echo "::set-output name=m2-dir::~/.m2"
          echo "::set-output name=sonar-dir::~/.sonar/cache"

      - name: Cache Maven and SonarCloud packages
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.setup-java.outputs.m2-dir }}
            ${{ steps.setup-java.outputs.sonar-dir }}
          key: ${{ runner.os }}-m2-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-sonar-

      - name: Build, Analyze and Test with Maven
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=riverleejames_spring-petclinic
          mvn test

      - name: Docker Auth (Only if required for both Google and Docker)
        run: echo "Docker logged in to ${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
